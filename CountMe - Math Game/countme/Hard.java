/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package countme;

import javax.swing.Timer;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import Audio.Sound;
import java.awt.event.KeyEvent;
import javax.swing.ImageIcon;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.PlainDocument;

/**
 *
 * @author Huawei
 */
public class Hard extends javax.swing.JFrame {

    /**
     * Creates new form Easy
     */
    public Hard() {
        initComponents();
        startTimer();
        Set_Question();
        
        sound = new Sound(); 
        sound.pauseMusic();
        if (!isMuted){
            sound.soundMusic();
        }
        
        ImageIcon img = new ImageIcon("C:\\Programming\\Java\\CountMe\\CountMe_icon.png");
        this.setIconImage(img.getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private Sound sound;
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        home = new javax.swing.JPanel();
        tutorial_btn = new javax.swing.JButton();
        settings_btn = new javax.swing.JButton();
        coins_lbl = new javax.swing.JLabel();
        coins_bg = new javax.swing.JLabel();
        lives_lbl = new javax.swing.JLabel();
        lives_bg = new javax.swing.JLabel();
        question = new javax.swing.JLabel();
        question_bg = new javax.swing.JLabel();
        timer_label = new javax.swing.JLabel();
        timer_bg = new javax.swing.JLabel();
        score_label = new javax.swing.JLabel();
        score = new javax.swing.JLabel();
        user_answer = new javax.swing.JTextField();
        textfield_bg = new javax.swing.JLabel();
        score_bg = new javax.swing.JLabel();
        submit_btn = new javax.swing.JButton();
        logo = new javax.swing.JLabel();
        background = new javax.swing.JLabel();
        wrong_feedback = new javax.swing.JPanel();
        sorry_txt = new javax.swing.JLabel();
        wrong_txt = new javax.swing.JLabel();
        next_btn1 = new javax.swing.JButton();
        txt_bg2 = new javax.swing.JLabel();
        background6 = new javax.swing.JLabel();
        correct_feedback = new javax.swing.JPanel();
        next_btn = new javax.swing.JButton();
        goodjob = new javax.swing.JLabel();
        correct_txt = new javax.swing.JLabel();
        txt_bg = new javax.swing.JLabel();
        background3 = new javax.swing.JLabel();
        times_up_feedback = new javax.swing.JPanel();
        next_btn2 = new javax.swing.JButton();
        sorry = new javax.swing.JLabel();
        timeisUp_lbl = new javax.swing.JLabel();
        txt_bg4 = new javax.swing.JLabel();
        background5 = new javax.swing.JLabel();
        settings = new javax.swing.JPanel();
        quit_btn = new javax.swing.JButton();
        resume_btn1 = new javax.swing.JButton();
        music_btn = new javax.swing.JToggleButton();
        txt_bg1 = new javax.swing.JLabel();
        background4 = new javax.swing.JLabel();
        hint_panel = new javax.swing.JPanel();
        sorry_txt1 = new javax.swing.JLabel();
        hint_lbl = new javax.swing.JLabel();
        okay_btn = new javax.swing.JButton();
        txt_bg3 = new javax.swing.JLabel();
        background7 = new javax.swing.JLabel();
        gameover_panel = new javax.swing.JPanel();
        gameover_label1 = new javax.swing.JLabel();
        nolives_lbl1 = new javax.swing.JLabel();
        menu_btn3 = new javax.swing.JButton();
        play_again_btn1 = new javax.swing.JButton();
        txt_bg7 = new javax.swing.JLabel();
        background12 = new javax.swing.JLabel();
        endgame_panel = new javax.swing.JPanel();
        quiz_lbl = new javax.swing.JLabel();
        compele_lbl = new javax.swing.JLabel();
        final_score_lbl = new javax.swing.JLabel();
        menu_btn1 = new javax.swing.JButton();
        play_again_btn = new javax.swing.JButton();
        txt_bg5 = new javax.swing.JLabel();
        background10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        setSize(new java.awt.Dimension(806, 625));

        home.setOpaque(false);
        home.setPreferredSize(new java.awt.Dimension(800, 625));
        home.setLayout(null);

        tutorial_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/setting.png"))); // NOI18N
        tutorial_btn.setBorder(null);
        tutorial_btn.setContentAreaFilled(false);
        tutorial_btn.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/setting_p.png"))); // NOI18N
        tutorial_btn.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/setting_h.png"))); // NOI18N
        tutorial_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tutorial_btnActionPerformed(evt);
            }
        });
        home.add(tutorial_btn);
        tutorial_btn.setBounds(690, 20, 80, 70);

        settings_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/tutorial_btn.png"))); // NOI18N
        settings_btn.setBorder(null);
        settings_btn.setContentAreaFilled(false);
        settings_btn.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/tutorial_btn_pressed.png"))); // NOI18N
        settings_btn.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/tutorial_btn_hover.png"))); // NOI18N
        settings_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settings_btnActionPerformed(evt);
            }
        });
        home.add(settings_btn);
        settings_btn.setBounds(620, 20, 80, 70);

        coins_lbl.setFont(new java.awt.Font("Mochiy Pop One", 1, 22)); // NOI18N
        coins_lbl.setForeground(new java.awt.Color(23, 64, 100));
        coins_lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        coins_lbl.setText("10");
        coins_lbl.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        home.add(coins_lbl);
        coins_lbl.setBounds(200, 30, 40, 50);

        coins_bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/coins.png"))); // NOI18N
        home.add(coins_bg);
        coins_bg.setBounds(150, 30, 110, 60);

        lives_lbl.setFont(new java.awt.Font("Mochiy Pop One", 1, 22)); // NOI18N
        lives_lbl.setForeground(new java.awt.Color(23, 64, 100));
        lives_lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lives_lbl.setText("1");
        lives_lbl.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        home.add(lives_lbl);
        lives_lbl.setBounds(80, 30, 40, 50);

        lives_bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/lives.png"))); // NOI18N
        home.add(lives_bg);
        lives_bg.setBounds(30, 20, 110, 80);

        question.setFont(new java.awt.Font("Mochiy Pop One", 0, 16)); // NOI18N
        question.setForeground(new java.awt.Color(199, 242, 255));
        question.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        question.setText("...");
        question.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        home.add(question);
        question.setBounds(120, 170, 560, 170);

        question_bg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        question_bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/question_txt.png"))); // NOI18N
        question_bg.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        home.add(question_bg);
        question_bg.setBounds(0, 130, 810, 250);

        timer_label.setFont(new java.awt.Font("Modak", 0, 36)); // NOI18N
        timer_label.setForeground(new java.awt.Color(23, 64, 100));
        timer_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timer_label.setText("60");
        home.add(timer_label);
        timer_label.setBounds(680, 500, 80, 90);

        timer_bg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timer_bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/timer.png"))); // NOI18N
        home.add(timer_bg);
        timer_bg.setBounds(650, 480, 140, 110);

        score_label.setFont(new java.awt.Font("Mochiy Pop One", 1, 16)); // NOI18N
        score_label.setForeground(new java.awt.Color(23, 64, 100));
        score_label.setText("0/" + questions.length);
        home.add(score_label);
        score_label.setBounds(90, 540, 60, 40);

        score.setFont(new java.awt.Font("Mochiy Pop One", 0, 12)); // NOI18N
        score.setForeground(new java.awt.Color(23, 64, 100));
        score.setText("Score:");
        home.add(score);
        score.setBounds(40, 550, 50, 18);

        user_answer.setBackground(new java.awt.Color(157, 229, 248));
        user_answer.setFont(new java.awt.Font("Mochiy Pop One", 0, 18)); // NOI18N
        user_answer.setForeground(new java.awt.Color(23, 64, 100));
        user_answer.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        user_answer.setText("Enter your answer here.");
        user_answer.setAutoscrolls(false);
        user_answer.setBorder(null);
        user_answer.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                user_answerFocusLost(evt);
            }
        });
        user_answer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                user_answerMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                user_answerMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                user_answerMouseReleased(evt);
            }
        });
        user_answer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                user_answerActionPerformed(evt);
            }
        });
        user_answer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                user_answerKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                user_answerKeyTyped(evt);
            }
        });
        home.add(user_answer);
        user_answer.setBounds(210, 410, 390, 40);
        user_answer.setDocument(new JTextFieldLimit(25));
        user_answer.setText("Enter your answer here.");

        textfield_bg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        textfield_bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/textfield_bg.png"))); // NOI18N
        home.add(textfield_bg);
        textfield_bg.setBounds(100, 390, 610, 90);

        score_bg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        score_bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/score.png"))); // NOI18N
        home.add(score_bg);
        score_bg.setBounds(20, 540, 150, 50);

        submit_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/submit.png"))); // NOI18N
        submit_btn.setBorder(null);
        submit_btn.setBorderPainted(false);
        submit_btn.setContentAreaFilled(false);
        submit_btn.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/submit_p.png"))); // NOI18N
        submit_btn.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/submit_h.png"))); // NOI18N
        submit_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submit_btnActionPerformed(evt);
            }
        });
        home.add(submit_btn);
        submit_btn.setBounds(340, 480, 120, 60);

        logo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/mini_logo.png"))); // NOI18N
        logo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        home.add(logo);
        logo.setBounds(0, 0, 800, 140);

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/background.png"))); // NOI18N
        background.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        background.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        background.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        background.setRequestFocusEnabled(false);
        background.setVerifyInputWhenFocusTarget(false);
        background.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        home.add(background);
        background.setBounds(0, 0, 800, 600);

        wrong_feedback.setOpaque(false);
        wrong_feedback.setPreferredSize(new java.awt.Dimension(800, 600));
        wrong_feedback.setLayout(null);

        sorry_txt.setFont(new java.awt.Font("Modak", 0, 75)); // NOI18N
        sorry_txt.setForeground(new java.awt.Color(157, 229, 248));
        sorry_txt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sorry_txt.setText("Oops, Sorry!");
        sorry_txt.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        wrong_feedback.add(sorry_txt);
        sorry_txt.setBounds(150, 230, 500, 90);

        wrong_txt.setFont(new java.awt.Font("Mochiy Pop One", 0, 20)); // NOI18N
        wrong_txt.setForeground(new java.awt.Color(157, 229, 248));
        wrong_txt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        wrong_txt.setText("Your answer is incorrect.");
        wrong_txt.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        wrong_feedback.add(wrong_txt);
        wrong_txt.setBounds(150, 280, 500, 90);

        next_btn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/next.png"))); // NOI18N
        next_btn1.setBorder(null);
        next_btn1.setBorderPainted(false);
        next_btn1.setContentAreaFilled(false);
        next_btn1.setEnabled(false);
        next_btn1.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/next_p.png"))); // NOI18N
        next_btn1.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/next_h.png"))); // NOI18N
        next_btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                next_btn1ActionPerformed(evt);
            }
        });
        wrong_feedback.add(next_btn1);
        next_btn1.setBounds(320, 370, 168, 70);

        txt_bg2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/txt_bg.png"))); // NOI18N
        txt_bg2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        wrong_feedback.add(txt_bg2);
        txt_bg2.setBounds(150, 120, 520, 410);

        background6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/background.png"))); // NOI18N
        background6.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        background6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        background6.setRequestFocusEnabled(false);
        background6.setVerifyInputWhenFocusTarget(false);
        wrong_feedback.add(background6);
        background6.setBounds(0, 0, 800, 600);

        correct_feedback.setPreferredSize(new java.awt.Dimension(800, 600));
        correct_feedback.setLayout(null);

        next_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/next.png"))); // NOI18N
        next_btn.setBorder(null);
        next_btn.setBorderPainted(false);
        next_btn.setContentAreaFilled(false);
        next_btn.setEnabled(false);
        next_btn.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/next_p.png"))); // NOI18N
        next_btn.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/next_h.png"))); // NOI18N
        next_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                next_btnActionPerformed(evt);
            }
        });
        correct_feedback.add(next_btn);
        next_btn.setBounds(320, 370, 168, 70);

        goodjob.setFont(new java.awt.Font("Modak", 0, 80)); // NOI18N
        goodjob.setForeground(new java.awt.Color(157, 229, 248));
        goodjob.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        goodjob.setText("Good Job!");
        goodjob.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        correct_feedback.add(goodjob);
        goodjob.setBounds(150, 230, 500, 80);

        correct_txt.setFont(new java.awt.Font("Mochiy Pop One", 0, 20)); // NOI18N
        correct_txt.setForeground(new java.awt.Color(157, 229, 248));
        correct_txt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        correct_txt.setText("Your answer is correct.");
        correct_txt.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        correct_feedback.add(correct_txt);
        correct_txt.setBounds(150, 280, 500, 60);

        txt_bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/txt_bg.png"))); // NOI18N
        txt_bg.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        correct_feedback.add(txt_bg);
        txt_bg.setBounds(150, 120, 520, 410);

        background3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/background.png"))); // NOI18N
        background3.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        background3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        background3.setRequestFocusEnabled(false);
        background3.setVerifyInputWhenFocusTarget(false);
        correct_feedback.add(background3);
        background3.setBounds(0, 0, 800, 600);

        times_up_feedback.setPreferredSize(new java.awt.Dimension(800, 600));
        times_up_feedback.setLayout(null);

        next_btn2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/next.png"))); // NOI18N
        next_btn2.setBorder(null);
        next_btn2.setBorderPainted(false);
        next_btn2.setContentAreaFilled(false);
        next_btn2.setEnabled(false);
        next_btn2.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/next_p.png"))); // NOI18N
        next_btn2.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/next_h.png"))); // NOI18N
        next_btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                next_btn2ActionPerformed(evt);
            }
        });
        times_up_feedback.add(next_btn2);
        next_btn2.setBounds(320, 370, 168, 70);

        sorry.setFont(new java.awt.Font("Modak", 0, 80)); // NOI18N
        sorry.setForeground(new java.awt.Color(157, 229, 248));
        sorry.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sorry.setText("Sorry :(");
        sorry.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        times_up_feedback.add(sorry);
        sorry.setBounds(150, 230, 500, 80);

        timeisUp_lbl.setFont(new java.awt.Font("Mochiy Pop One", 0, 20)); // NOI18N
        timeisUp_lbl.setForeground(new java.awt.Color(157, 229, 248));
        timeisUp_lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timeisUp_lbl.setText("Time is up.");
        timeisUp_lbl.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        times_up_feedback.add(timeisUp_lbl);
        timeisUp_lbl.setBounds(150, 280, 500, 70);

        txt_bg4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/txt_bg.png"))); // NOI18N
        txt_bg4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        times_up_feedback.add(txt_bg4);
        txt_bg4.setBounds(150, 120, 520, 410);

        background5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/background.png"))); // NOI18N
        background5.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        background5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        background5.setRequestFocusEnabled(false);
        background5.setVerifyInputWhenFocusTarget(false);
        times_up_feedback.add(background5);
        background5.setBounds(0, 0, 800, 600);

        settings.setMaximumSize(new java.awt.Dimension(800, 625));
        settings.setMinimumSize(new java.awt.Dimension(800, 625));
        settings.setOpaque(false);
        settings.setPreferredSize(new java.awt.Dimension(800, 600));
        settings.setLayout(null);

        quit_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/quit.png"))); // NOI18N
        quit_btn.setBorder(null);
        quit_btn.setContentAreaFilled(false);
        quit_btn.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/quit_p.png"))); // NOI18N
        quit_btn.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/quit_h.png"))); // NOI18N
        quit_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quit_btnActionPerformed(evt);
            }
        });
        settings.add(quit_btn);
        quit_btn.setBounds(280, 380, 230, 90);

        resume_btn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/resume.png"))); // NOI18N
        resume_btn1.setBorder(null);
        resume_btn1.setContentAreaFilled(false);
        resume_btn1.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/resume_p.png"))); // NOI18N
        resume_btn1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/resume_h.png"))); // NOI18N
        resume_btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resume_btn1ActionPerformed(evt);
            }
        });
        settings.add(resume_btn1);
        resume_btn1.setBounds(280, 180, 230, 90);

        music_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/music_txt.png"))); // NOI18N
        music_btn.setBorder(null);
        music_btn.setContentAreaFilled(false);
        music_btn.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/music_txt_h.png"))); // NOI18N
        music_btn.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/music_txt_p.png"))); // NOI18N
        music_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                music_btnActionPerformed(evt);
            }
        });
        settings.add(music_btn);
        music_btn.setBounds(290, 280, 210, 90);

        txt_bg1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/txt_bg.png"))); // NOI18N
        txt_bg1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        settings.add(txt_bg1);
        txt_bg1.setBounds(150, 120, 520, 410);

        background4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/background.png"))); // NOI18N
        background4.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        background4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        background4.setRequestFocusEnabled(false);
        background4.setVerifyInputWhenFocusTarget(false);
        settings.add(background4);
        background4.setBounds(0, 0, 800, 600);

        hint_panel.setOpaque(false);
        hint_panel.setPreferredSize(new java.awt.Dimension(800, 600));
        hint_panel.setLayout(null);

        sorry_txt1.setFont(new java.awt.Font("Modak", 0, 75)); // NOI18N
        sorry_txt1.setForeground(new java.awt.Color(157, 229, 248));
        sorry_txt1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sorry_txt1.setText("Hint");
        sorry_txt1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        hint_panel.add(sorry_txt1);
        sorry_txt1.setBounds(150, 140, 500, 120);

        hint_lbl.setFont(new java.awt.Font("Mochiy Pop One", 0, 18)); // NOI18N
        hint_lbl.setForeground(new java.awt.Color(157, 229, 248));
        hint_lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        hint_lbl.setText("...");
        hint_lbl.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        hint_panel.add(hint_lbl);
        hint_lbl.setBounds(150, 230, 500, 170);

        okay_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/okay_btn.png"))); // NOI18N
        okay_btn.setBorder(null);
        okay_btn.setContentAreaFilled(false);
        okay_btn.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/okay_btn_pressed.png"))); // NOI18N
        okay_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okay_btnActionPerformed(evt);
            }
        });
        hint_panel.add(okay_btn);
        okay_btn.setBounds(340, 420, 120, 46);

        txt_bg3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/txt_bg.png"))); // NOI18N
        txt_bg3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        hint_panel.add(txt_bg3);
        txt_bg3.setBounds(150, 120, 520, 410);

        background7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/background.png"))); // NOI18N
        background7.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        background7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        background7.setRequestFocusEnabled(false);
        background7.setVerifyInputWhenFocusTarget(false);
        hint_panel.add(background7);
        background7.setBounds(0, 0, 800, 600);

        gameover_panel.setOpaque(false);
        gameover_panel.setPreferredSize(new java.awt.Dimension(800, 600));
        gameover_panel.setLayout(null);

        gameover_label1.setFont(new java.awt.Font("Modak", 0, 75)); // NOI18N
        gameover_label1.setForeground(new java.awt.Color(157, 229, 248));
        gameover_label1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gameover_label1.setText("Game Over!");
        gameover_label1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        gameover_panel.add(gameover_label1);
        gameover_label1.setBounds(150, 230, 500, 80);

        nolives_lbl1.setFont(new java.awt.Font("Mochiy Pop One", 0, 24)); // NOI18N
        nolives_lbl1.setForeground(new java.awt.Color(157, 229, 248));
        nolives_lbl1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nolives_lbl1.setText("No lives left.");
        gameover_panel.add(nolives_lbl1);
        nolives_lbl1.setBounds(150, 300, 500, 50);

        menu_btn3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/menu.png"))); // NOI18N
        menu_btn3.setBorder(null);
        menu_btn3.setContentAreaFilled(false);
        menu_btn3.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/menu_p.png"))); // NOI18N
        menu_btn3.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/menu_h.png"))); // NOI18N
        menu_btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_btn3ActionPerformed(evt);
            }
        });
        gameover_panel.add(menu_btn3);
        menu_btn3.setBounds(260, 410, 120, 50);

        play_again_btn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/again.png"))); // NOI18N
        play_again_btn1.setBorder(null);
        play_again_btn1.setContentAreaFilled(false);
        play_again_btn1.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/again_p.png"))); // NOI18N
        play_again_btn1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/again_h.png"))); // NOI18N
        play_again_btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                play_again_btn1ActionPerformed(evt);
            }
        });
        gameover_panel.add(play_again_btn1);
        play_again_btn1.setBounds(380, 400, 190, 70);

        txt_bg7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/txt_bg.png"))); // NOI18N
        txt_bg7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        gameover_panel.add(txt_bg7);
        txt_bg7.setBounds(150, 120, 520, 410);

        background12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/background.png"))); // NOI18N
        background12.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        background12.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        background12.setRequestFocusEnabled(false);
        background12.setVerifyInputWhenFocusTarget(false);
        gameover_panel.add(background12);
        background12.setBounds(0, 0, 800, 600);

        endgame_panel.setOpaque(false);
        endgame_panel.setPreferredSize(new java.awt.Dimension(800, 600));
        endgame_panel.setLayout(null);

        quiz_lbl.setFont(new java.awt.Font("Modak", 0, 100)); // NOI18N
        quiz_lbl.setForeground(new java.awt.Color(157, 229, 248));
        quiz_lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        quiz_lbl.setText("Quiz ");
        quiz_lbl.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        endgame_panel.add(quiz_lbl);
        quiz_lbl.setBounds(150, 170, 500, 120);

        compele_lbl.setFont(new java.awt.Font("Modak", 0, 75)); // NOI18N
        compele_lbl.setForeground(new java.awt.Color(157, 229, 248));
        compele_lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        compele_lbl.setText("Complete! ");
        compele_lbl.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        endgame_panel.add(compele_lbl);
        compele_lbl.setBounds(150, 240, 500, 120);

        final_score_lbl.setFont(new java.awt.Font("Mochiy Pop One", 0, 14)); // NOI18N
        final_score_lbl.setForeground(new java.awt.Color(157, 229, 248));
        final_score_lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        final_score_lbl.setText("Score: "+ score_values + "/" + questions.length);
        endgame_panel.add(final_score_lbl);
        final_score_lbl.setBounds(157, 340, 490, 21);

        menu_btn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/menu.png"))); // NOI18N
        menu_btn1.setBorder(null);
        menu_btn1.setContentAreaFilled(false);
        menu_btn1.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/menu_p.png"))); // NOI18N
        menu_btn1.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/menu_h.png"))); // NOI18N
        menu_btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_btn1ActionPerformed(evt);
            }
        });
        endgame_panel.add(menu_btn1);
        menu_btn1.setBounds(260, 410, 120, 50);

        play_again_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/again.png"))); // NOI18N
        play_again_btn.setBorder(null);
        play_again_btn.setContentAreaFilled(false);
        play_again_btn.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/again_p.png"))); // NOI18N
        play_again_btn.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/again_h.png"))); // NOI18N
        play_again_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                play_again_btnActionPerformed(evt);
            }
        });
        endgame_panel.add(play_again_btn);
        play_again_btn.setBounds(380, 400, 190, 70);

        txt_bg5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/txt_bg.png"))); // NOI18N
        txt_bg5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        endgame_panel.add(txt_bg5);
        txt_bg5.setBounds(150, 120, 520, 410);

        background10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/background.png"))); // NOI18N
        background10.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        background10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        background10.setRequestFocusEnabled(false);
        background10.setVerifyInputWhenFocusTarget(false);
        endgame_panel.add(background10);
        background10.setBounds(0, 0, 800, 600);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(home, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(settings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(wrong_feedback, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(correct_feedback, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(hint_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(times_up_feedback, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(endgame_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(gameover_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 625, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(home, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(settings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(wrong_feedback, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(correct_feedback, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(hint_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(times_up_feedback, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(endgame_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(gameover_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        wrong_feedback.setVisible(false);
        correct_feedback.setVisible(false);
        times_up_feedback.setVisible(false);
        settings.setVisible(false);
        hint_panel.setVisible(false);
        gameover_panel.setVisible(false);
        endgame_panel.setVisible(false);

        setSize(new java.awt.Dimension(814, 632));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tutorial_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tutorial_btnActionPerformed
        // TODO add your handling code here:
        sound.soundClick(isMuted);
        hint_panel.setVisible(false);
        wrong_feedback.setVisible(false);
        settings.setVisible(true);
        correct_feedback.setVisible(false);
        times_up_feedback.setVisible(false);
        home.setVisible(false);
        
        timer.stop();
    }//GEN-LAST:event_tutorial_btnActionPerformed

    private void settings_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settings_btnActionPerformed
        // TODO add your handling code here:
        sound.soundClick(isMuted);
        hint_panel.setVisible(true);
        wrong_feedback.setVisible(false);
        settings.setVisible(false);
        correct_feedback.setVisible(false);
        times_up_feedback.setVisible(false);
        home.setVisible(false);
        
        if(coin_values >= 10){
            hint_lbl.setText(hints[index]);
            coin_values -= 10;
        }else{
            hint_lbl.setText("<html> <style> p { text-align: center; } <style>  "
                    + "<p> Sorry. You dont have enough coins.<br>Answer questions to earn more!<p/> <html>");
        }
        
        UpdateLabels();
    }//GEN-LAST:event_settings_btnActionPerformed

    private void next_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_next_btnActionPerformed
        // TODO add your handling code here:
        sound.soundClick(isMuted);
        user_answer.setText("Enter your answer here.");
        correct_feedback.setVisible(false);
        home.setVisible(true);
        next_btn.setEnabled(false);
        UpdateLabels();
        index++;
             
        if (index < questions.length) {
            Set_Question();
            timer.stop();
            startTimer();
        } else {
        // Handle end of questions
        hint_panel.setVisible(false);
        wrong_feedback.setVisible(false);
        settings.setVisible(false);
        correct_feedback.setVisible(false);
        times_up_feedback.setVisible(false);
        home.setVisible(false);
        final_score_lbl.setText("Score: "+ score_values + "/" + questions.length);
        endgame_panel.setVisible(true);
        }
        
        // Check if lives are zero
        if (lives == 0) {
            // End the game
            hint_panel.setVisible(false);
            wrong_feedback.setVisible(false);
            settings.setVisible(false);
            correct_feedback.setVisible(false);
            times_up_feedback.setVisible(false);
            home.setVisible(false);
            gameover_panel.setVisible(true);
}
    }//GEN-LAST:event_next_btnActionPerformed

    private void next_btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_next_btn1ActionPerformed
        // TODO add your handling code here:
        sound.soundClick(isMuted);
        user_answer.setText("Enter your answer here.");
            home.setVisible(true);
            wrong_feedback.setVisible(false);
            next_btn1.setEnabled(false);
            UpdateLabels();
            index++;
            
        if (index < questions.length) {
            Set_Question();
            timer.stop();
            startTimer();
        } else {
            // Handle end of questions
            hint_panel.setVisible(false);
            wrong_feedback.setVisible(false);
            settings.setVisible(false);
            correct_feedback.setVisible(false);
            times_up_feedback.setVisible(false);
            home.setVisible(false);
            endgame_panel.setVisible(true);
            }     
                // Check if lives are zero
        if (lives == 0) {
            // End the game
            hint_panel.setVisible(false);
            wrong_feedback.setVisible(false);
            settings.setVisible(false);
            correct_feedback.setVisible(false);
            times_up_feedback.setVisible(false);
            home.setVisible(false);
            gameover_panel.setVisible(true);
        }
        
    }//GEN-LAST:event_next_btn1ActionPerformed

    private void okay_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okay_btnActionPerformed
        // TODO add your handling code here
        sound.soundClick(isMuted);
        hint_panel.setVisible(false);
        wrong_feedback.setVisible(false);
        settings.setVisible(false);
        correct_feedback.setVisible(false);
        times_up_feedback.setVisible(false);
        home.setVisible(true);

    }//GEN-LAST:event_okay_btnActionPerformed

    private void next_btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_next_btn2ActionPerformed
        // TODO add your handling code here:
        sound.soundClick(isMuted);
        hint_panel.setVisible(false);
        wrong_feedback.setVisible(false);
        settings.setVisible(false);
        correct_feedback.setVisible(false);
        times_up_feedback.setVisible(false);
        home.setVisible(true);
        
        if (index < questions.length) {
            Set_Question();
            timer.stop();
            startTimer();
        } else {
            // Handle end of questions
            hint_panel.setVisible(false);
            wrong_feedback.setVisible(false);
            settings.setVisible(false);
            correct_feedback.setVisible(false);
            times_up_feedback.setVisible(false);
            home.setVisible(false);
            endgame_panel.setVisible(true);
            } 
        
        if (lives == 0) {
            // End the game
            hint_panel.setVisible(false);
            wrong_feedback.setVisible(false);
            settings.setVisible(false);
            correct_feedback.setVisible(false);
            times_up_feedback.setVisible(false);
            home.setVisible(false);
            gameover_panel.setVisible(true);
        }
    }//GEN-LAST:event_next_btn2ActionPerformed

    private void resume_btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resume_btn1ActionPerformed
        // TODO add your handling code here:
        sound.soundClick(isMuted);
        hint_panel.setVisible(false);
        wrong_feedback.setVisible(false);
        settings.setVisible(false);
        correct_feedback.setVisible(false);
        times_up_feedback.setVisible(false);
        home.setVisible(true);
        
        timer.start();
    }//GEN-LAST:event_resume_btn1ActionPerformed

    private void quit_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quit_btnActionPerformed
        // TODO add your handling code here:
        sound.soundClick(isMuted);
        sound.endMusic();
        dispose();
        new CountMe().setVisible(true);
    }//GEN-LAST:event_quit_btnActionPerformed

    private void menu_btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_btn1ActionPerformed
        // TODO add your handling code here:
        sound.soundClick(isMuted);
        sound.pauseMusic();
        dispose();
        new CountMe().setVisible(true);
    }//GEN-LAST:event_menu_btn1ActionPerformed

    private void play_again_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_play_again_btnActionPerformed
        // TODO add your handling code here:
        sound.soundClick(isMuted);
        sound.pauseMusic();
        dispose();
        new Hard().setVisible(true);
    }//GEN-LAST:event_play_again_btnActionPerformed

    private void menu_btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_btn3ActionPerformed
        // TODO add your handling code here:
        sound.soundClick(isMuted);
        sound.pauseMusic();
        dispose();
        new CountMe().setVisible(true);
    }//GEN-LAST:event_menu_btn3ActionPerformed

    private void play_again_btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_play_again_btn1ActionPerformed
        // TODO add your handling code here:
        sound.soundClick(isMuted);
        sound.pauseMusic();
        dispose();
        new Hard().setVisible(true);
    }//GEN-LAST:event_play_again_btn1ActionPerformed

    public boolean isPlaying = true;
    public boolean isMuted = false;
    
            
    private void music_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_music_btnActionPerformed
        // TODO add your handling code here:
        if (isPlaying) {
            sound.pauseMusic();
            isPlaying = false;
            isMuted = true;
        } else {
            sound.resumeMusic();
            isPlaying = true;
            isMuted = false;
        }
        
        sound.soundClick(isMuted);
    }//GEN-LAST:event_music_btnActionPerformed

    private void submit_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submit_btnActionPerformed
        // TODO add your handling code here:
        answer = user_answer.getText();
        if(answer.isEmpty() || answer.equals("Enter your answer here.")){
            return;
        }else{
            
            if (answer.equals(answers[index])) {
                score_values++;
                coin_values += 10;
                UpdateLabels();
                score_label.setText(score_values + "/30");
                home.setVisible(false);
                wrong_feedback.setVisible(false);
                settings.setVisible(false);
                next_btn.setEnabled(true);
                correct_feedback.setVisible(true);
                sound.soundCorrect(isMuted);
            } else {
                lives--;
                lives_lbl.setText(Integer.toString(lives));
                home.setVisible(false);
                correct_feedback.setVisible(false);
                settings.setVisible(false);
                next_btn1.setEnabled(true);
                wrong_feedback.setVisible(true);
                sound.soundWrong(isMuted);
            }
            
        }
 

    }//GEN-LAST:event_submit_btnActionPerformed

    private void user_answerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_user_answerActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_user_answerActionPerformed

    private void user_answerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_answerMouseClicked
        // TODO add your handling code here:
        if (user_answer.getText().equals("Enter your answer here.")){
            user_answer.setText("");
        }
    }//GEN-LAST:event_user_answerMouseClicked

    private void user_answerMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_answerMouseExited
        // TODO add your handling code here
        
    }//GEN-LAST:event_user_answerMouseExited

    
    private void user_answerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_user_answerKeyPressed
        
    }//GEN-LAST:event_user_answerKeyPressed

    private void user_answerKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_user_answerKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_user_answerKeyTyped

    private void user_answerMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_answerMouseReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_user_answerMouseReleased

    private void user_answerFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_user_answerFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_user_answerFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Hard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Hard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Hard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Hard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Hard().setVisible(true);
            }
        });
        
        //run the questions
    }
    
    
//    methods
    
    //method to limit characters of text filed
    
    class JTextFieldLimit extends PlainDocument {
        private int limit;
        JTextFieldLimit(int limit) {
          super();
          this.limit = limit;
        }

        JTextFieldLimit(int limit, boolean upper) {
          super();
          this.limit = limit;
        }

        public void insertString(int offset, String str, AttributeSet attr) throws BadLocationException {
          if (str == null)
            return;

          if ((getLength() + str.length()) <= limit) {
            super.insertString(offset, str, attr);
          }
        }
      }
    
    
    
    private void UpdateLabels(){
        score_label.setText(score_values + "/" + questions.length);
        final_score_lbl.setText("Score: " + score_values + "/" + questions.length);
        coins_lbl.setText(Integer.toString(coin_values)); 
    };

    
    private int score_values;
    private int coin_values = 10;
    private int index;
    private int lives = 1;
    private String answer = "";
    
        
//        <html> <style> p { text-align: center; } <style>  <p> question <p/> <html>
       
        private String[] questions = {"<html> <style> p { text-align: center; } <style>  <p> In how many ways you can create a string of 5 characters if the 1st letter is a vowel if: repetition is allowed? <p/> <html>",
            
                                      "<html> <style> p { text-align: center; } </style> <p> From a list of 10 suggested books, Ricky must choose 4 to make a report. How many possible combinations are there? </p> <html>",
                                      
                                      "<html> <style> p { text-align: center; } <style>  <p> The PEN has ten members on its board of directors. In how many different ways can it elect a president, vice-president, secretary, and treasurer?<p/> <html>",

                                      "<html> <style> p { text-align: center; } </style>  <p> There are 110 people at a meeting. They each shake hands with everyone else. How many handshakes were there? <p/> <html>",

                                      "<html> <style> p { text-align: center; } <style>  <p>You are setting the combination on a three-digit lock. You want to use the numbers 1, 2, and 3, but don't care what order they are in. How many different combinations are possible?</p> <html>",

                                      "<html> <style> p { text-align: center; } <style>  <p>From the 30 shoes you bought this past year, you plan to take 5 with you on vacation. How many different sets of five shoes can you bring?</p> <html>",
                                      
                                      "<html> <style> p { text-align: center; } <style>  <p>A team of 15 Greenbowl players needs to choose three players to restart the router. In how many ways can they choose 3 players?</p> <html>",
                                      
                                      "<html> <style> p { text-align: center; } <style>  <p>There are 45 applicants for three Computer Programmer positions. In how many ways can the company choose 3 programmers to fill the positions?</p> <html>",
                                      
                                      "<html> <style> p { text-align: center; } <style>  <p>There are 20 applicants for four jobs: Computer Programmer, Software Engineer, Manager, and Systems Engineer. In how many ways can the company fill the four positions if order doesn't matter?</p> <html>",
                                      
                                      "<html> <style> p { text-align: center; } <style>  <p>Mr. Engilbert owns 4 pairs of pants, 7 shirts, and 3 suits. In how many ways can he choose 2 of the pairs of pants, 3 of the shirts, and 1 of the suits to pack for an event?</p> <html>",
                                      
                                      "<html> <style> p { text-align: center; } <style>  <p>How many distinct permutations are there of the word  \"statistics\"?</p> <html>",
                                      
                                      "<html> <style> p { text-align: center; } <style>  <p>In how many ways can you create an ID number of the format __ __ - __ __ __ __, where the first code can be from 01 to 10 and the last code can be from 0001 to 9999?</p> <html>",
                                      
                                      "<html> <style> p { text-align: center; } <style>  <p>How many numbers of 3 different digits each can be made from the digits 1, 2, 3, 4, and 5 if: The 1st number must be even (repetition is not allowed)?</p> <html>",
                                      
                                      "<html> <style> p { text-align: center; } <style>  <p>How many permutations are there of the letters in the word \"programming\"?</p> <html>",
                                      
                                      "<html> <style> p { text-align: center; } <style>  <p>In how many ways may can seven persons line up to get on a bus?</p> <html>",
                                  
                                      "<html> <style> p { text-align: center; } <style>  <p>In how many ways can 5 boys with different age and 1 girl seated in a row with 6 chairs if boys are to sit from both ends. </p> <html>",
                                  
                                      "<html> <style> p { text-align: center; } <style>  <p>In how many ways you can create different strings from the word “OKOKOK”?</p> <html>",
                                   
                                      "<html> <style> p { text-align: center; } <style>  <p>How many arrangements are there if you are to create a different word from BOOKKEEPER?</p> <html>",
                                   
                                      "<html> <style> p { text-align: center; } <style>  <p>What is C(8, 2)?</p> <html>",
                                      
                                      "<html> <style> p { text-align: center; } <style>  <p>Eliah has to choose 5 numbers for his password (from digits 0 to 9) and repeat digits are not possible. How many different arrangements of numbers could Malcolm choose?</p> <html>",
                                     
                                      "<html> <style> p { text-align: center; } <style>  <p>10 students have appeared for a test in which the top three will get unique prizes. How many possible ways are there to get the prize winners?</p> <html>",
                                      
                                      "<html> <style> p { text-align: center; } <style>  <p>How many permutations of 3 vowels can be made from the vowels (a,e,i,o,u) without any repeat letters?</p> <html>",
                                      
                                      "<html> <style> p { text-align: center; } <style>  <p>In how many ways can the name Saige be re-arranged such that the letter \"i\" comes to the right of the letter \"g\"?</p> <html>",
                                      
                                      "<html> <style> p { text-align: center; } <style>  <p>How many unique passwords can be made from 2 letters and 3 digits (0 to 9) if repeats are possible?</p> <html>",
                                      
                                      "<html> <style> p { text-align: center; } <style>  <p>Carlos has homework assignments in six subjects. He only has time to do four of them.</p> <html>",

                                     };
        
        
        private String[] answers = {"2284880", 
                                    "210",
                                    "5040",
                                    "5995",
                                    "6",
                                    "142506",
                                    "455",
                                    "85140",
                                    "4845",
                                    "630",
                                    "50400",
                                    "99990",
                                    "24",
                                    "4989600",
                                    "5040",
                                    "480",
                                    "20",
                                    "151200",
                                    "28",
                                    "30240",
                                    "720",
                                    "64",
                                    "120",
                                    "676000",
                                    "15",
                                    
                                    };
        
        private String[] hints = {"5 x 26 x 26 x 26 x 26",
                                  "10!/(4! x (10 - 4)!)",
                                  "10 x 9 x 8 x 7",
                                  "(110 * 109) / 2",
                                  "arrange 3 distinct objects.",
                                  "Combination of 30 and 5",
                                  "3 from 15",
                                  "85 ???",
                                  "for ate and for 5",
                                  "6 x 35 x 3",
                                  "five, four, and 3 zeroes",
                                  "<html> <style> p { text-align: center; } <style>  <p>1st code (10 choices) <br>x Last code (9999 choices)</p> <html>",
                                  "2 x 3C2",
                                  "_989600",
                                  "Line up = Permutations",
                                  "5 x 96",
                                  "2 0k?",
                                  "Consider repeated letters",
                                  "28 or 82",
                                  "10 × 9 × 8 × 7 × 6 ",
                                  "seven 20",
                                  "4^4",
                                  "5!",
                                  "26 x 26 x 10 x 10 x 10",
                                  "fifth of my teen",
                                  
                                };
     
            
    private int timeRemaining = 60; 
    private Timer timer; 
    
    private void startTimer() {
        timeRemaining = 60;
        timer = new Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                timeRemaining--;
                if (timeRemaining >= 0) {
                    updateTimerLabel();
                } else {
                    timer.stop();
                    lives--;
                    lives_lbl.setText(Integer.toString(lives));
                    sound.soundWrong(isMuted);
 
                    hint_panel.setVisible(false);
                    wrong_feedback.setVisible(false);
                    settings.setVisible(false);
                    correct_feedback.setVisible(false);
                    home.setVisible(false);
                    times_up_feedback.setVisible(true);
                    next_btn2.setEnabled(true);
                }
            }
        });
        timer.start();
    }
    
    private void updateTimerLabel() {
        String timerText = String.format("%02d", timeRemaining); // Format seconds 
        timer_label.setText(timerText);
    }
    
    public void Set_Question() {
        question.setText(questions[index]);
    }
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private javax.swing.JLabel background10;
    private javax.swing.JLabel background12;
    private javax.swing.JLabel background3;
    private javax.swing.JLabel background4;
    private javax.swing.JLabel background5;
    private javax.swing.JLabel background6;
    private javax.swing.JLabel background7;
    private javax.swing.JLabel coins_bg;
    private javax.swing.JLabel coins_lbl;
    private javax.swing.JLabel compele_lbl;
    private javax.swing.JPanel correct_feedback;
    private javax.swing.JLabel correct_txt;
    private javax.swing.JPanel endgame_panel;
    private javax.swing.JLabel final_score_lbl;
    private javax.swing.JLabel gameover_label1;
    private javax.swing.JPanel gameover_panel;
    private javax.swing.JLabel goodjob;
    private javax.swing.JLabel hint_lbl;
    private javax.swing.JPanel hint_panel;
    private javax.swing.JPanel home;
    private javax.swing.JLabel lives_bg;
    private javax.swing.JLabel lives_lbl;
    private javax.swing.JLabel logo;
    private javax.swing.JButton menu_btn1;
    private javax.swing.JButton menu_btn3;
    private javax.swing.JToggleButton music_btn;
    private javax.swing.JButton next_btn;
    private javax.swing.JButton next_btn1;
    private javax.swing.JButton next_btn2;
    private javax.swing.JLabel nolives_lbl1;
    private javax.swing.JButton okay_btn;
    private javax.swing.JButton play_again_btn;
    private javax.swing.JButton play_again_btn1;
    private javax.swing.JLabel question;
    private javax.swing.JLabel question_bg;
    private javax.swing.JButton quit_btn;
    private javax.swing.JLabel quiz_lbl;
    private javax.swing.JButton resume_btn1;
    private javax.swing.JLabel score;
    private javax.swing.JLabel score_bg;
    private javax.swing.JLabel score_label;
    private javax.swing.JPanel settings;
    private javax.swing.JButton settings_btn;
    private javax.swing.JLabel sorry;
    private javax.swing.JLabel sorry_txt;
    private javax.swing.JLabel sorry_txt1;
    private javax.swing.JButton submit_btn;
    private javax.swing.JLabel textfield_bg;
    private javax.swing.JLabel timeisUp_lbl;
    private javax.swing.JLabel timer_bg;
    private javax.swing.JLabel timer_label;
    private javax.swing.JPanel times_up_feedback;
    private javax.swing.JButton tutorial_btn;
    private javax.swing.JLabel txt_bg;
    private javax.swing.JLabel txt_bg1;
    private javax.swing.JLabel txt_bg2;
    private javax.swing.JLabel txt_bg3;
    private javax.swing.JLabel txt_bg4;
    private javax.swing.JLabel txt_bg5;
    private javax.swing.JLabel txt_bg7;
    private javax.swing.JTextField user_answer;
    private javax.swing.JPanel wrong_feedback;
    private javax.swing.JLabel wrong_txt;
    // End of variables declaration//GEN-END:variables
}
