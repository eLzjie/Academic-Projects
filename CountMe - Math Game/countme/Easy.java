/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package countme;

import javax.swing.Timer;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import Audio.Sound;
import javax.swing.ImageIcon;

/**
 *
 * @author Huawei
 */
public class Easy extends javax.swing.JFrame {

    /**
     * Creates new form Easy
     */
    public Easy() {
        initComponents();
        startTimer();
        Set_Question();
        
        sound = new Sound(); 
        sound.pauseMusic();
        if (!isMuted){
            sound.soundMusic();
        }
        
        ImageIcon img = new ImageIcon("C:\\Programming\\Java\\CountMe\\CountMe_icon.png");
        this.setIconImage(img.getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private Sound sound;
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        home = new javax.swing.JPanel();
        tutorial_btn = new javax.swing.JButton();
        settings_btn = new javax.swing.JButton();
        coins_lbl = new javax.swing.JLabel();
        coins_bg = new javax.swing.JLabel();
        lives_lbl = new javax.swing.JLabel();
        lives_bg = new javax.swing.JLabel();
        question = new javax.swing.JLabel();
        question_bg = new javax.swing.JLabel();
        A_lbl = new javax.swing.JLabel();
        B_lbl = new javax.swing.JLabel();
        C_lbl = new javax.swing.JLabel();
        D_lbl = new javax.swing.JLabel();
        A_btn = new javax.swing.JButton();
        B_btn = new javax.swing.JButton();
        C_btn = new javax.swing.JButton();
        D_btn = new javax.swing.JButton();
        timer_label = new javax.swing.JLabel();
        timer_bg = new javax.swing.JLabel();
        score_label = new javax.swing.JLabel();
        score = new javax.swing.JLabel();
        score_bg = new javax.swing.JLabel();
        logo = new javax.swing.JLabel();
        background = new javax.swing.JLabel();
        wrong_feedback = new javax.swing.JPanel();
        sorry_txt = new javax.swing.JLabel();
        wrong_txt = new javax.swing.JLabel();
        next_btn1 = new javax.swing.JButton();
        txt_bg2 = new javax.swing.JLabel();
        background6 = new javax.swing.JLabel();
        correct_feedback = new javax.swing.JPanel();
        next_btn = new javax.swing.JButton();
        goodjob = new javax.swing.JLabel();
        correct_txt = new javax.swing.JLabel();
        txt_bg = new javax.swing.JLabel();
        background3 = new javax.swing.JLabel();
        times_up_feedback = new javax.swing.JPanel();
        next_btn2 = new javax.swing.JButton();
        sorry = new javax.swing.JLabel();
        timeisUp_lbl = new javax.swing.JLabel();
        txt_bg4 = new javax.swing.JLabel();
        background5 = new javax.swing.JLabel();
        settings = new javax.swing.JPanel();
        quit_btn = new javax.swing.JButton();
        resume_btn1 = new javax.swing.JButton();
        music_btn = new javax.swing.JToggleButton();
        txt_bg1 = new javax.swing.JLabel();
        background4 = new javax.swing.JLabel();
        hint_panel = new javax.swing.JPanel();
        sorry_txt1 = new javax.swing.JLabel();
        hint_lbl = new javax.swing.JLabel();
        okay_btn = new javax.swing.JButton();
        txt_bg3 = new javax.swing.JLabel();
        background7 = new javax.swing.JLabel();
        gameover_panel = new javax.swing.JPanel();
        gameover_label1 = new javax.swing.JLabel();
        nolives_lbl1 = new javax.swing.JLabel();
        menu_btn3 = new javax.swing.JButton();
        play_again_btn1 = new javax.swing.JButton();
        txt_bg7 = new javax.swing.JLabel();
        background12 = new javax.swing.JLabel();
        endgame_panel = new javax.swing.JPanel();
        quiz_lbl = new javax.swing.JLabel();
        compele_lbl = new javax.swing.JLabel();
        final_score_lbl = new javax.swing.JLabel();
        menu_btn1 = new javax.swing.JButton();
        play_again_btn = new javax.swing.JButton();
        txt_bg5 = new javax.swing.JLabel();
        background10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        setSize(new java.awt.Dimension(806, 625));

        home.setOpaque(false);
        home.setPreferredSize(new java.awt.Dimension(800, 625));
        home.setLayout(null);

        tutorial_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/setting.png"))); // NOI18N
        tutorial_btn.setBorder(null);
        tutorial_btn.setContentAreaFilled(false);
        tutorial_btn.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/setting_p.png"))); // NOI18N
        tutorial_btn.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/setting_h.png"))); // NOI18N
        tutorial_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tutorial_btnActionPerformed(evt);
            }
        });
        home.add(tutorial_btn);
        tutorial_btn.setBounds(690, 20, 80, 70);

        settings_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/tutorial_btn.png"))); // NOI18N
        settings_btn.setBorder(null);
        settings_btn.setContentAreaFilled(false);
        settings_btn.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/tutorial_btn_pressed.png"))); // NOI18N
        settings_btn.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/tutorial_btn_hover.png"))); // NOI18N
        settings_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settings_btnActionPerformed(evt);
            }
        });
        home.add(settings_btn);
        settings_btn.setBounds(620, 20, 80, 70);

        coins_lbl.setFont(new java.awt.Font("Mochiy Pop One", 1, 22)); // NOI18N
        coins_lbl.setForeground(new java.awt.Color(23, 64, 100));
        coins_lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        coins_lbl.setText("10");
        coins_lbl.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        home.add(coins_lbl);
        coins_lbl.setBounds(200, 30, 40, 50);

        coins_bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/coins.png"))); // NOI18N
        home.add(coins_bg);
        coins_bg.setBounds(150, 30, 110, 60);

        lives_lbl.setFont(new java.awt.Font("Mochiy Pop One", 1, 22)); // NOI18N
        lives_lbl.setForeground(new java.awt.Color(23, 64, 100));
        lives_lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lives_lbl.setText("3");
        lives_lbl.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        home.add(lives_lbl);
        lives_lbl.setBounds(80, 30, 40, 50);

        lives_bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/lives.png"))); // NOI18N
        home.add(lives_bg);
        lives_bg.setBounds(30, 20, 110, 80);

        question.setFont(new java.awt.Font("Mochiy Pop One", 0, 16)); // NOI18N
        question.setForeground(new java.awt.Color(199, 242, 255));
        question.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        question.setText("...");
        question.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        home.add(question);
        question.setBounds(120, 170, 560, 170);

        question_bg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        question_bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/question_txt.png"))); // NOI18N
        question_bg.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        home.add(question_bg);
        question_bg.setBounds(0, 130, 810, 250);

        A_lbl.setFont(new java.awt.Font("Modak", 0, 30)); // NOI18N
        A_lbl.setForeground(new java.awt.Color(23, 64, 100));
        A_lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        A_lbl.setText(".");
        A_lbl.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        home.add(A_lbl);
        A_lbl.setBounds(250, 390, 120, 40);

        B_lbl.setFont(new java.awt.Font("Modak", 0, 30)); // NOI18N
        B_lbl.setForeground(new java.awt.Color(23, 64, 100));
        B_lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        B_lbl.setText(".");
        B_lbl.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        home.add(B_lbl);
        B_lbl.setBounds(420, 390, 120, 40);

        C_lbl.setFont(new java.awt.Font("Modak", 0, 30)); // NOI18N
        C_lbl.setForeground(new java.awt.Color(23, 64, 100));
        C_lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        C_lbl.setText(".");
        C_lbl.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        home.add(C_lbl);
        C_lbl.setBounds(250, 470, 120, 40);

        D_lbl.setFont(new java.awt.Font("Modak", 0, 30)); // NOI18N
        D_lbl.setForeground(new java.awt.Color(23, 64, 100));
        D_lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        D_lbl.setText(".");
        D_lbl.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        home.add(D_lbl);
        D_lbl.setBounds(420, 470, 120, 40);

        A_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/choice.png"))); // NOI18N
        A_btn.setBorder(null);
        A_btn.setBorderPainted(false);
        A_btn.setContentAreaFilled(false);
        A_btn.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/choice_p.png"))); // NOI18N
        A_btn.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/choice_h.png"))); // NOI18N
        A_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                A_btnActionPerformed(evt);
            }
        });
        home.add(A_btn);
        A_btn.setBounds(230, 380, 160, 70);

        B_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/choice.png"))); // NOI18N
        B_btn.setBorder(null);
        B_btn.setBorderPainted(false);
        B_btn.setContentAreaFilled(false);
        B_btn.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/choice_p.png"))); // NOI18N
        B_btn.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/choice_h.png"))); // NOI18N
        B_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_btnActionPerformed(evt);
            }
        });
        home.add(B_btn);
        B_btn.setBounds(400, 380, 160, 70);

        C_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/choice.png"))); // NOI18N
        C_btn.setBorder(null);
        C_btn.setBorderPainted(false);
        C_btn.setContentAreaFilled(false);
        C_btn.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/choice_p.png"))); // NOI18N
        C_btn.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/choice_h.png"))); // NOI18N
        C_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C_btnActionPerformed(evt);
            }
        });
        home.add(C_btn);
        C_btn.setBounds(230, 460, 160, 70);

        D_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/choice.png"))); // NOI18N
        D_btn.setBorder(null);
        D_btn.setBorderPainted(false);
        D_btn.setContentAreaFilled(false);
        D_btn.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/choice_p.png"))); // NOI18N
        D_btn.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/choice_h.png"))); // NOI18N
        D_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                D_btnActionPerformed(evt);
            }
        });
        home.add(D_btn);
        D_btn.setBounds(400, 460, 160, 70);

        timer_label.setFont(new java.awt.Font("Modak", 0, 36)); // NOI18N
        timer_label.setForeground(new java.awt.Color(23, 64, 100));
        timer_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timer_label.setText("30");
        home.add(timer_label);
        timer_label.setBounds(680, 500, 80, 90);

        timer_bg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timer_bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/timer.png"))); // NOI18N
        home.add(timer_bg);
        timer_bg.setBounds(650, 480, 140, 110);

        score_label.setFont(new java.awt.Font("Mochiy Pop One", 1, 16)); // NOI18N
        score_label.setForeground(new java.awt.Color(23, 64, 100));
        score_label.setText("0/" + questions.length);
        home.add(score_label);
        score_label.setBounds(90, 540, 60, 40);

        score.setFont(new java.awt.Font("Mochiy Pop One", 0, 12)); // NOI18N
        score.setForeground(new java.awt.Color(23, 64, 100));
        score.setText("Score:");
        home.add(score);
        score.setBounds(40, 550, 50, 18);

        score_bg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        score_bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/score.png"))); // NOI18N
        home.add(score_bg);
        score_bg.setBounds(20, 540, 150, 50);

        logo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/mini_logo.png"))); // NOI18N
        logo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        home.add(logo);
        logo.setBounds(0, 0, 800, 140);

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/background.png"))); // NOI18N
        background.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        background.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        background.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        background.setRequestFocusEnabled(false);
        background.setVerifyInputWhenFocusTarget(false);
        background.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        home.add(background);
        background.setBounds(0, 0, 800, 600);

        wrong_feedback.setOpaque(false);
        wrong_feedback.setPreferredSize(new java.awt.Dimension(800, 600));
        wrong_feedback.setLayout(null);

        sorry_txt.setFont(new java.awt.Font("Modak", 0, 75)); // NOI18N
        sorry_txt.setForeground(new java.awt.Color(157, 229, 248));
        sorry_txt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sorry_txt.setText("Oops, Sorry!");
        sorry_txt.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        wrong_feedback.add(sorry_txt);
        sorry_txt.setBounds(150, 230, 500, 90);

        wrong_txt.setFont(new java.awt.Font("Mochiy Pop One", 0, 20)); // NOI18N
        wrong_txt.setForeground(new java.awt.Color(157, 229, 248));
        wrong_txt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        wrong_txt.setText("Your answer is incorrect.");
        wrong_txt.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        wrong_feedback.add(wrong_txt);
        wrong_txt.setBounds(150, 280, 500, 90);

        next_btn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/next.png"))); // NOI18N
        next_btn1.setBorder(null);
        next_btn1.setBorderPainted(false);
        next_btn1.setContentAreaFilled(false);
        next_btn1.setEnabled(false);
        next_btn1.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/next_p.png"))); // NOI18N
        next_btn1.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/next_h.png"))); // NOI18N
        next_btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                next_btn1ActionPerformed(evt);
            }
        });
        wrong_feedback.add(next_btn1);
        next_btn1.setBounds(320, 370, 168, 70);

        txt_bg2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/txt_bg.png"))); // NOI18N
        txt_bg2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        wrong_feedback.add(txt_bg2);
        txt_bg2.setBounds(150, 120, 520, 410);

        background6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/background.png"))); // NOI18N
        background6.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        background6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        background6.setRequestFocusEnabled(false);
        background6.setVerifyInputWhenFocusTarget(false);
        wrong_feedback.add(background6);
        background6.setBounds(0, 0, 800, 600);

        correct_feedback.setPreferredSize(new java.awt.Dimension(800, 600));
        correct_feedback.setLayout(null);

        next_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/next.png"))); // NOI18N
        next_btn.setBorder(null);
        next_btn.setBorderPainted(false);
        next_btn.setContentAreaFilled(false);
        next_btn.setEnabled(false);
        next_btn.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/next_p.png"))); // NOI18N
        next_btn.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/next_h.png"))); // NOI18N
        next_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                next_btnActionPerformed(evt);
            }
        });
        correct_feedback.add(next_btn);
        next_btn.setBounds(320, 370, 168, 70);

        goodjob.setFont(new java.awt.Font("Modak", 0, 80)); // NOI18N
        goodjob.setForeground(new java.awt.Color(157, 229, 248));
        goodjob.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        goodjob.setText("Good Job!");
        goodjob.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        correct_feedback.add(goodjob);
        goodjob.setBounds(150, 230, 500, 80);

        correct_txt.setFont(new java.awt.Font("Mochiy Pop One", 0, 20)); // NOI18N
        correct_txt.setForeground(new java.awt.Color(157, 229, 248));
        correct_txt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        correct_txt.setText("Your answer is correct.");
        correct_txt.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        correct_feedback.add(correct_txt);
        correct_txt.setBounds(150, 280, 500, 60);

        txt_bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/txt_bg.png"))); // NOI18N
        txt_bg.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        correct_feedback.add(txt_bg);
        txt_bg.setBounds(150, 120, 520, 410);

        background3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/background.png"))); // NOI18N
        background3.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        background3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        background3.setRequestFocusEnabled(false);
        background3.setVerifyInputWhenFocusTarget(false);
        correct_feedback.add(background3);
        background3.setBounds(0, 0, 800, 600);

        times_up_feedback.setPreferredSize(new java.awt.Dimension(800, 600));
        times_up_feedback.setLayout(null);

        next_btn2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/next.png"))); // NOI18N
        next_btn2.setBorder(null);
        next_btn2.setBorderPainted(false);
        next_btn2.setContentAreaFilled(false);
        next_btn2.setEnabled(false);
        next_btn2.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/next_p.png"))); // NOI18N
        next_btn2.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/next_h.png"))); // NOI18N
        next_btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                next_btn2ActionPerformed(evt);
            }
        });
        times_up_feedback.add(next_btn2);
        next_btn2.setBounds(320, 370, 168, 70);

        sorry.setFont(new java.awt.Font("Modak", 0, 80)); // NOI18N
        sorry.setForeground(new java.awt.Color(157, 229, 248));
        sorry.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sorry.setText("Sorry :(");
        sorry.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        times_up_feedback.add(sorry);
        sorry.setBounds(150, 230, 500, 80);

        timeisUp_lbl.setFont(new java.awt.Font("Mochiy Pop One", 0, 20)); // NOI18N
        timeisUp_lbl.setForeground(new java.awt.Color(157, 229, 248));
        timeisUp_lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timeisUp_lbl.setText("Time is up.");
        timeisUp_lbl.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        times_up_feedback.add(timeisUp_lbl);
        timeisUp_lbl.setBounds(150, 280, 500, 70);

        txt_bg4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/txt_bg.png"))); // NOI18N
        txt_bg4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        times_up_feedback.add(txt_bg4);
        txt_bg4.setBounds(150, 120, 520, 410);

        background5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/background.png"))); // NOI18N
        background5.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        background5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        background5.setRequestFocusEnabled(false);
        background5.setVerifyInputWhenFocusTarget(false);
        times_up_feedback.add(background5);
        background5.setBounds(0, 0, 800, 600);

        settings.setMaximumSize(new java.awt.Dimension(800, 625));
        settings.setMinimumSize(new java.awt.Dimension(800, 625));
        settings.setOpaque(false);
        settings.setPreferredSize(new java.awt.Dimension(800, 600));
        settings.setLayout(null);

        quit_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/quit.png"))); // NOI18N
        quit_btn.setBorder(null);
        quit_btn.setContentAreaFilled(false);
        quit_btn.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/quit_p.png"))); // NOI18N
        quit_btn.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/quit_h.png"))); // NOI18N
        quit_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quit_btnActionPerformed(evt);
            }
        });
        settings.add(quit_btn);
        quit_btn.setBounds(280, 380, 230, 90);

        resume_btn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/resume.png"))); // NOI18N
        resume_btn1.setBorder(null);
        resume_btn1.setContentAreaFilled(false);
        resume_btn1.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/resume_p.png"))); // NOI18N
        resume_btn1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/resume_h.png"))); // NOI18N
        resume_btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resume_btn1ActionPerformed(evt);
            }
        });
        settings.add(resume_btn1);
        resume_btn1.setBounds(280, 180, 230, 90);

        music_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/music_txt.png"))); // NOI18N
        music_btn.setBorder(null);
        music_btn.setContentAreaFilled(false);
        music_btn.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/music_txt_h.png"))); // NOI18N
        music_btn.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/music_txt_p.png"))); // NOI18N
        music_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                music_btnActionPerformed(evt);
            }
        });
        settings.add(music_btn);
        music_btn.setBounds(290, 280, 210, 90);

        txt_bg1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/txt_bg.png"))); // NOI18N
        txt_bg1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        settings.add(txt_bg1);
        txt_bg1.setBounds(150, 120, 520, 410);

        background4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/background.png"))); // NOI18N
        background4.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        background4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        background4.setRequestFocusEnabled(false);
        background4.setVerifyInputWhenFocusTarget(false);
        settings.add(background4);
        background4.setBounds(0, 0, 800, 600);

        hint_panel.setOpaque(false);
        hint_panel.setPreferredSize(new java.awt.Dimension(800, 600));
        hint_panel.setLayout(null);

        sorry_txt1.setFont(new java.awt.Font("Modak", 0, 75)); // NOI18N
        sorry_txt1.setForeground(new java.awt.Color(157, 229, 248));
        sorry_txt1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sorry_txt1.setText("Hint");
        sorry_txt1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        hint_panel.add(sorry_txt1);
        sorry_txt1.setBounds(150, 140, 500, 120);

        hint_lbl.setFont(new java.awt.Font("Mochiy Pop One", 0, 18)); // NOI18N
        hint_lbl.setForeground(new java.awt.Color(157, 229, 248));
        hint_lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        hint_lbl.setText("...");
        hint_lbl.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        hint_panel.add(hint_lbl);
        hint_lbl.setBounds(150, 230, 500, 170);

        okay_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/okay_btn.png"))); // NOI18N
        okay_btn.setBorder(null);
        okay_btn.setContentAreaFilled(false);
        okay_btn.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/okay_btn_pressed.png"))); // NOI18N
        okay_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okay_btnActionPerformed(evt);
            }
        });
        hint_panel.add(okay_btn);
        okay_btn.setBounds(340, 420, 120, 46);

        txt_bg3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/txt_bg.png"))); // NOI18N
        txt_bg3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        hint_panel.add(txt_bg3);
        txt_bg3.setBounds(150, 120, 520, 410);

        background7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/background.png"))); // NOI18N
        background7.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        background7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        background7.setRequestFocusEnabled(false);
        background7.setVerifyInputWhenFocusTarget(false);
        hint_panel.add(background7);
        background7.setBounds(0, 0, 800, 600);

        gameover_panel.setOpaque(false);
        gameover_panel.setPreferredSize(new java.awt.Dimension(800, 600));
        gameover_panel.setLayout(null);

        gameover_label1.setFont(new java.awt.Font("Modak", 0, 75)); // NOI18N
        gameover_label1.setForeground(new java.awt.Color(157, 229, 248));
        gameover_label1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gameover_label1.setText("Game Over!");
        gameover_label1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        gameover_panel.add(gameover_label1);
        gameover_label1.setBounds(150, 230, 500, 80);

        nolives_lbl1.setFont(new java.awt.Font("Mochiy Pop One", 0, 24)); // NOI18N
        nolives_lbl1.setForeground(new java.awt.Color(157, 229, 248));
        nolives_lbl1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nolives_lbl1.setText("No lives left.");
        gameover_panel.add(nolives_lbl1);
        nolives_lbl1.setBounds(150, 300, 500, 50);

        menu_btn3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/menu.png"))); // NOI18N
        menu_btn3.setBorder(null);
        menu_btn3.setContentAreaFilled(false);
        menu_btn3.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/menu_p.png"))); // NOI18N
        menu_btn3.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/menu_h.png"))); // NOI18N
        menu_btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_btn3ActionPerformed(evt);
            }
        });
        gameover_panel.add(menu_btn3);
        menu_btn3.setBounds(260, 410, 120, 50);

        play_again_btn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/again.png"))); // NOI18N
        play_again_btn1.setBorder(null);
        play_again_btn1.setContentAreaFilled(false);
        play_again_btn1.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/again_p.png"))); // NOI18N
        play_again_btn1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/again_h.png"))); // NOI18N
        play_again_btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                play_again_btn1ActionPerformed(evt);
            }
        });
        gameover_panel.add(play_again_btn1);
        play_again_btn1.setBounds(380, 400, 190, 70);

        txt_bg7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/txt_bg.png"))); // NOI18N
        txt_bg7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        gameover_panel.add(txt_bg7);
        txt_bg7.setBounds(150, 120, 520, 410);

        background12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/background.png"))); // NOI18N
        background12.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        background12.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        background12.setRequestFocusEnabled(false);
        background12.setVerifyInputWhenFocusTarget(false);
        gameover_panel.add(background12);
        background12.setBounds(0, 0, 800, 600);

        endgame_panel.setOpaque(false);
        endgame_panel.setPreferredSize(new java.awt.Dimension(800, 600));
        endgame_panel.setLayout(null);

        quiz_lbl.setFont(new java.awt.Font("Modak", 0, 100)); // NOI18N
        quiz_lbl.setForeground(new java.awt.Color(157, 229, 248));
        quiz_lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        quiz_lbl.setText("Quiz ");
        quiz_lbl.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        endgame_panel.add(quiz_lbl);
        quiz_lbl.setBounds(150, 170, 500, 120);

        compele_lbl.setFont(new java.awt.Font("Modak", 0, 75)); // NOI18N
        compele_lbl.setForeground(new java.awt.Color(157, 229, 248));
        compele_lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        compele_lbl.setText("Complete! ");
        compele_lbl.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        endgame_panel.add(compele_lbl);
        compele_lbl.setBounds(150, 240, 500, 120);

        final_score_lbl.setFont(new java.awt.Font("Mochiy Pop One", 0, 14)); // NOI18N
        final_score_lbl.setForeground(new java.awt.Color(157, 229, 248));
        final_score_lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        final_score_lbl.setText("Score: "+ score_values + "/" + questions.length);
        endgame_panel.add(final_score_lbl);
        final_score_lbl.setBounds(157, 340, 490, 21);

        menu_btn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/menu.png"))); // NOI18N
        menu_btn1.setBorder(null);
        menu_btn1.setContentAreaFilled(false);
        menu_btn1.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/menu_p.png"))); // NOI18N
        menu_btn1.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/menu_h.png"))); // NOI18N
        menu_btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_btn1ActionPerformed(evt);
            }
        });
        endgame_panel.add(menu_btn1);
        menu_btn1.setBounds(260, 410, 120, 50);

        play_again_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/again.png"))); // NOI18N
        play_again_btn.setBorder(null);
        play_again_btn.setContentAreaFilled(false);
        play_again_btn.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/again_p.png"))); // NOI18N
        play_again_btn.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/again_h.png"))); // NOI18N
        play_again_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                play_again_btnActionPerformed(evt);
            }
        });
        endgame_panel.add(play_again_btn);
        play_again_btn.setBounds(380, 400, 190, 70);

        txt_bg5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/txt_bg.png"))); // NOI18N
        txt_bg5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        endgame_panel.add(txt_bg5);
        txt_bg5.setBounds(150, 120, 520, 410);

        background10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/countme/Images/background.png"))); // NOI18N
        background10.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        background10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        background10.setRequestFocusEnabled(false);
        background10.setVerifyInputWhenFocusTarget(false);
        endgame_panel.add(background10);
        background10.setBounds(0, 0, 800, 600);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(home, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(settings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(wrong_feedback, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(correct_feedback, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(hint_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(times_up_feedback, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(endgame_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(gameover_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 625, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(home, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(settings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(wrong_feedback, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(correct_feedback, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(hint_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(times_up_feedback, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(endgame_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(gameover_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        wrong_feedback.setVisible(false);
        correct_feedback.setVisible(false);
        times_up_feedback.setVisible(false);
        settings.setVisible(false);
        hint_panel.setVisible(false);
        gameover_panel.setVisible(false);
        endgame_panel.setVisible(false);

        setSize(new java.awt.Dimension(814, 632));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tutorial_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tutorial_btnActionPerformed
        // TODO add your handling code here:
        sound.soundClick(isMuted);
        hint_panel.setVisible(false);
        wrong_feedback.setVisible(false);
        settings.setVisible(true);
        correct_feedback.setVisible(false);
        times_up_feedback.setVisible(false);
        home.setVisible(false);
        
        timer.stop();
    }//GEN-LAST:event_tutorial_btnActionPerformed

    private void settings_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settings_btnActionPerformed
        // TODO add your handling code here:
        sound.soundClick(isMuted);
        hint_panel.setVisible(true);
        wrong_feedback.setVisible(false);
        settings.setVisible(false);
        correct_feedback.setVisible(false);
        times_up_feedback.setVisible(false);
        home.setVisible(false);
        
        if(coin_values >= 10){
            hint_lbl.setText(hints[index]);
            coin_values -= 10;
        }else{
            hint_lbl.setText("<html> <style> p { text-align: center; } <style>  "
                    + "<p> Sorry. You dont have enough coins.<br>Answer questions to earn more!<p/> <html>");
        }
        
        UpdateLabels();
    }//GEN-LAST:event_settings_btnActionPerformed

    private void A_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_A_btnActionPerformed
            // TODO add your handling code here:
            char answer = 'A';
            timer.stop();
            if (answer == answers[index]) {
                score_values++;
                coin_values += 2;
                UpdateLabels();
                score_label.setText(score_values + "/15");
                home.setVisible(false);
                wrong_feedback.setVisible(false);
                settings.setVisible(false);
                next_btn.setEnabled(true);
                correct_feedback.setVisible(true);
                sound.soundCorrect(isMuted);
            } else {
                lives--;
                lives_lbl.setText(Integer.toString(lives));
                home.setVisible(false);
                correct_feedback.setVisible(false);
                settings.setVisible(false);
                next_btn1.setEnabled(true);
                wrong_feedback.setVisible(true);
                sound.soundWrong(isMuted);
            }
    }//GEN-LAST:event_A_btnActionPerformed

    private void C_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C_btnActionPerformed
        // TODO add your handling code here:
        char answer = 'C';
            if (answer == answers[index]) {
                score_values++;
                coin_values += 2;
                UpdateLabels();
                score_label.setText(score_values + "/15");
                home.setVisible(false);
                wrong_feedback.setVisible(false);
                settings.setVisible(false);
                next_btn.setEnabled(true);
                correct_feedback.setVisible(true);
                sound.soundCorrect(isMuted);
            }else {
                lives--;
                lives_lbl.setText(Integer.toString(lives));
                home.setVisible(false);
                correct_feedback.setVisible(false);
                settings.setVisible(false);
                next_btn1.setEnabled(true);
                wrong_feedback.setVisible(true);
                sound.soundWrong(isMuted);
            }
    }//GEN-LAST:event_C_btnActionPerformed

    private void B_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_btnActionPerformed
        // TODO add your handling code here:
        char answer = 'B';
            if (answer == answers[index]) {
                score_values++;
                coin_values += 2;
                UpdateLabels();
                home.setVisible(false);
                wrong_feedback.setVisible(false);
                settings.setVisible(false);
                next_btn.setEnabled(true);
                correct_feedback.setVisible(true);
                sound.soundCorrect(isMuted);
            }else {
                lives--;
                lives_lbl.setText(Integer.toString(lives));
                home.setVisible(false);
                correct_feedback.setVisible(false);
                settings.setVisible(false);
                next_btn1.setEnabled(true);
                wrong_feedback.setVisible(true);
                sound.soundWrong(isMuted);
            }
            
    }//GEN-LAST:event_B_btnActionPerformed

    private void D_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_D_btnActionPerformed
        // TODO add your handling code here:
        char answer = 'D';
            if (answer == answers[index]) {
                score_values++;
                coin_values += 2;
                UpdateLabels();
                home.setVisible(false);
                wrong_feedback.setVisible(false);
                settings.setVisible(false);
                next_btn.setEnabled(true);
                correct_feedback.setVisible(true);
                sound.soundCorrect(isMuted);
            } else {
                lives--;
                lives_lbl.setText(Integer.toString(lives));
                home.setVisible(false);
                correct_feedback.setVisible(false);
                settings.setVisible(false);
                next_btn1.setEnabled(true);
                wrong_feedback.setVisible(true);
                sound.soundWrong(isMuted);
            }

    }//GEN-LAST:event_D_btnActionPerformed

    private void next_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_next_btnActionPerformed
        // TODO add your handling code here:
        sound.soundClick(isMuted);
        correct_feedback.setVisible(false);
        home.setVisible(true);
        next_btn.setEnabled(false);
        UpdateLabels();
        index++;
             
        if (index < questions.length) {
            Set_Question();
            timer.stop();
            startTimer();
        } else {
        // Handle end of questions
        hint_panel.setVisible(false);
        wrong_feedback.setVisible(false);
        settings.setVisible(false);
        correct_feedback.setVisible(false);
        times_up_feedback.setVisible(false);
        home.setVisible(false);
        final_score_lbl.setText("Score: "+ score_values + "/" + questions.length);
        endgame_panel.setVisible(true);
        }
        
        // Check if lives are zero
        if (lives == 0) {
            // End the game
            hint_panel.setVisible(false);
            wrong_feedback.setVisible(false);
            settings.setVisible(false);
            correct_feedback.setVisible(false);
            times_up_feedback.setVisible(false);
            home.setVisible(false);
            gameover_panel.setVisible(true);
}
    }//GEN-LAST:event_next_btnActionPerformed

    private void next_btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_next_btn1ActionPerformed
        // TODO add your handling code here:
        sound.soundClick(isMuted);
            home.setVisible(true);
            wrong_feedback.setVisible(false);
            next_btn1.setEnabled(false);
            UpdateLabels();
            index++;
            
        if (index < questions.length) {
            Set_Question();
            timer.stop();
            startTimer();
        } else {
            // Handle end of questions
            hint_panel.setVisible(false);
            wrong_feedback.setVisible(false);
            settings.setVisible(false);
            correct_feedback.setVisible(false);
            times_up_feedback.setVisible(false);
            home.setVisible(false);
            endgame_panel.setVisible(true);
            }     
                // Check if lives are zero
        if (lives == 0) {
            // End the game
            hint_panel.setVisible(false);
            wrong_feedback.setVisible(false);
            settings.setVisible(false);
            correct_feedback.setVisible(false);
            times_up_feedback.setVisible(false);
            home.setVisible(false);
            gameover_panel.setVisible(true);
        }
        
    }//GEN-LAST:event_next_btn1ActionPerformed

    private void okay_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okay_btnActionPerformed
        // TODO add your handling code here
        sound.soundClick(isMuted);
        hint_panel.setVisible(false);
        wrong_feedback.setVisible(false);
        settings.setVisible(false);
        correct_feedback.setVisible(false);
        times_up_feedback.setVisible(false);
        home.setVisible(true);

    }//GEN-LAST:event_okay_btnActionPerformed

    private void next_btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_next_btn2ActionPerformed
        // TODO add your handling code here:
        sound.soundClick(isMuted);
        hint_panel.setVisible(false);
        wrong_feedback.setVisible(false);
        settings.setVisible(false);
        correct_feedback.setVisible(false);
        times_up_feedback.setVisible(false);
        home.setVisible(true);
        
        if (index < questions.length) {
            Set_Question();
            timer.stop();
            startTimer();
        } else {
            hint_panel.setVisible(false);
            wrong_feedback.setVisible(false);
            settings.setVisible(false);
            correct_feedback.setVisible(false);
            times_up_feedback.setVisible(false);
            home.setVisible(false);
            endgame_panel.setVisible(true);
            
        }
        
        if (lives == 0) {
            // End the game
            hint_panel.setVisible(false);
            wrong_feedback.setVisible(false);
            settings.setVisible(false);
            correct_feedback.setVisible(false);
            times_up_feedback.setVisible(false);
            home.setVisible(false);
            gameover_panel.setVisible(true);
        }
    }//GEN-LAST:event_next_btn2ActionPerformed

    private void resume_btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resume_btn1ActionPerformed
        // TODO add your handling code here:
        sound.soundClick(isMuted);
        hint_panel.setVisible(false);
        wrong_feedback.setVisible(false);
        settings.setVisible(false);
        correct_feedback.setVisible(false);
        times_up_feedback.setVisible(false);
        home.setVisible(true);
        
        timer.start();
    }//GEN-LAST:event_resume_btn1ActionPerformed

    private void quit_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quit_btnActionPerformed
        // TODO add your handling code here:
        sound.soundClick(isMuted);
        sound.endMusic();
        dispose();
        new CountMe().setVisible(true);
    }//GEN-LAST:event_quit_btnActionPerformed

    private void menu_btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_btn1ActionPerformed
        // TODO add your handling code here:
        sound.soundClick(isMuted);
        sound.pauseMusic();
        dispose();
        new CountMe().setVisible(true);
    }//GEN-LAST:event_menu_btn1ActionPerformed

    private void play_again_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_play_again_btnActionPerformed
        // TODO add your handling code here:
        sound.soundClick(isMuted);
        sound.pauseMusic();
        dispose();
        new Easy().setVisible(true);
    }//GEN-LAST:event_play_again_btnActionPerformed

    private void menu_btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_btn3ActionPerformed
        // TODO add your handling code here:
        sound.soundClick(isMuted);
        sound.pauseMusic();
        dispose();
        new CountMe().setVisible(true);  
    }//GEN-LAST:event_menu_btn3ActionPerformed

    private void play_again_btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_play_again_btn1ActionPerformed
        // TODO add your handling code here:
        sound.soundClick(isMuted);
        sound.pauseMusic();
        dispose();
        new Easy().setVisible(true);
    }//GEN-LAST:event_play_again_btn1ActionPerformed

    public boolean isPlaying = true;
    public boolean isMuted = false;
    
            
    private void music_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_music_btnActionPerformed
        // TODO add your handling code here:
        if (isPlaying) {
            sound.pauseMusic();
            isPlaying = false;
            isMuted = true;
        } else {
            sound.resumeMusic();
            isPlaying = true;
            isMuted = false;
        }
        
        sound.soundClick(isMuted);
    }//GEN-LAST:event_music_btnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Easy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Easy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Easy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Easy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Easy().setVisible(true);
            }
        });
        
        //run the questions
    }
    
    
//    methods
    
    private void UpdateLabels(){
        score_label.setText(score_values + "/" + questions.length);
        coins_lbl.setText(Integer.toString(coin_values)); 
    };

    
    private int score_values;
    private int coin_values = 10;
    private int index;
    private int lives = 3;
    
        
//        <html> <style> p { text-align: center; } <style>  <p> question <p/> <html>
        
        private String[] questions = {"<html> <style> p { text-align: center; } <style>  <p>A group of hikers are going to hike on a mountainous valley. In how many ways these group of hikers if they have to choose from these trails? <p/> <html>",
            
                             "<html> <style> p { text-align: center; } <style>  <p> There are 10 girls and 10 boys in BSIT Block 5. If Sir Neon randomly selects a member, what is the probability that he will select a boy? <p/> <html>",
                             
                             "<html> <style> p { text-align: center; } <style>  <p> The UPang Cafiteria has 2 choices of appetizers, 3 choices of entrees, and 2 choices of beverages. How many meal combinations are available? <p/> <html>",
                             
                             "<html> <style> p { text-align: center; } <style>  <p> A farm has 5 brown cows and 10 white cows. A fence is open and two cows escape. What is the probability that it will be a brown cow, then a white cow?<p/> <html>",
                             
                             "<html> <style> p { text-align: center; } <style>  <p> The following M & M colors are in the bowl: 4 yellow, 6 orange, 3 green, 5 blue, 2 brown. What is the probability of selecting a brown candy?<p/> <html>",
            
                             "<html> <style> p { text-align: center; } <style>  <p> What is the probability of 'heads' coming up when a coin is tossed?<p/> <html>",
                             
                             "<html> <style> p { text-align: center; } <style>  <p> Sir Reynard drew one card from a deck of cards. What is the probability that he drew a king? <p/> <html>",
                             
                             "<html> <style> p { text-align: center; } <style>  <p> Miss Vanessa drew a card from a deck of cards. What is the probability that she drew a heart or a club?<p/> <html>",
                             
                             "<html> <style> p { text-align: center; } <style>  <p> What is the probability of getting an odd number when you toss a die? <p/> <html>",
                             
                             "<html> <style> p { text-align: center; } <style>  <p> What is the probability of winning in a 3-digit raffle ticket? <p/> <html>",
                             
                             "<html> <style> p { text-align: center; } <style>  <p> How many 2-digit numbers, if you start counting from 01, are divisible by 10? <p/> <html>",
                             
                             "<html> <style> p { text-align: center; } <style>  <p> The letters that form the word COUNTME are placed in a bowl. What is the probability of choosing a letter other than “O”? <p/> <html>",
                             
                             "<html> <style> p { text-align: center; } <style> <p> A bag contains 5 red balls and 3 blue balls. If one ball is randomly selected, what is the probability of selecting a blue ball?<p/> <html>",
                             
                             "<html> <style> p { text-align: center; } <style> <p> A day in the year is randomly chosen. Given the day is in the month of December, what is the probability the day is the 25th?<p/> <html>",
                             
                             "<html> <style> p { text-align: center; } <style>  <p>McDonald's sells both Coke and Sprite as soft drink options. If you randomly select a drink from the McDonald's menu, what is the probability it is Coke?<p/> <html>",



        };
        
        private String[][] choices = { {"20", "9", "625", "1024"},
                                       {"20%" ,"50%", "10%", "25%"},
                                       {"7" ,"64", "12", "10"},
                                       {"5/21", "15/21", "2/15", "6/15"},
                                       {"1/50", "3/10", "3/20", "1/10"},
                                       {".5", ".3", ".10", ".9"},
                                       {"1/52", "1/13", "4/13", "1/4"},
                                       {".33", ".99", ".50", ".10"},
                                       {"1/6", "1/2", "1/3", "2/3"},
                                       {"1/1000", "1/100", "1/10", "1/10000"},
                                       {"8", "9", "10", "11"},
                                       {"1/7", "6/7", "1/6", "5/6"},
                                       {"3/8", "3/5", "5/8", "5/3"},
                                       {"3.32%", "9.7%", "3.2%", "25%"},
                                       {"25%", "50%", "75%", "100%"},
                

                                    };
        
        private char[] answers = {'A', 'B', 'C', 'A', 'D', 'A', 'B', 'C', 'B', 'A', 'B', 'B', 'A', 'C', 'B'};
        
        private String[] hints = {"4 x 5", 
                                  "Half", 
                                  "2 x 3 x 2", 
                                  "5/15 x 10/14",
                                  "Brown over candies.",
                                  "There are only two outcomes",
                                  "4/52",
                                  "Half",
                                  "1, 3, 5",
                                  "<html> <style> p{text-align: center;}<style><p>Each number from 000 to 999 has an equal chance of being drawn <p/> <html>",
                                  "The numbers divisible by 10 end in 0",
                                  "Count the total number of letters.",
                                  "Blue balls over all balls in the bag.",
                                  "<html> <style> p{text-align: center;}<style><p>Nmber of days in December and how many of those days are the 25th.<p/> <html>",
                                  "Coke vs. Sprite",
                                  
                                };
     
            
    private int timeRemaining = 30; 
    private Timer timer; 
    
    // Method to start the timer
    private void startTimer() {
        timeRemaining = 30;
        timer = new Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                timeRemaining--;
                if (timeRemaining >= 0) {
                    updateTimerLabel();
                } else {
                    timer.stop();
                    lives--;
                    lives_lbl.setText(Integer.toString(lives));
                    sound.soundWrong(isMuted);
 
                    hint_panel.setVisible(false);
                    wrong_feedback.setVisible(false);
                    settings.setVisible(false);
                    correct_feedback.setVisible(false);
                    home.setVisible(false);
                    times_up_feedback.setVisible(true);
                    next_btn2.setEnabled(true);
                }
            }
        });
        timer.start();
    }
    
    // Method to update the timer label
    private void updateTimerLabel() {
        String timerText = String.format("%02d", timeRemaining); // Format seconds part only
        timer_label.setText(timerText);
    }
    
    public void Set_Question() {
        question.setText(questions[index]);
        A_lbl.setText(choices[index][0]);
        B_lbl.setText(choices[index][1]);
        C_lbl.setText(choices[index][2]);
        D_lbl.setText(choices[index][3]);
    }
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton A_btn;
    private javax.swing.JLabel A_lbl;
    private javax.swing.JButton B_btn;
    private javax.swing.JLabel B_lbl;
    private javax.swing.JButton C_btn;
    private javax.swing.JLabel C_lbl;
    private javax.swing.JButton D_btn;
    private javax.swing.JLabel D_lbl;
    private javax.swing.JLabel background;
    private javax.swing.JLabel background10;
    private javax.swing.JLabel background12;
    private javax.swing.JLabel background3;
    private javax.swing.JLabel background4;
    private javax.swing.JLabel background5;
    private javax.swing.JLabel background6;
    private javax.swing.JLabel background7;
    private javax.swing.JLabel coins_bg;
    private javax.swing.JLabel coins_lbl;
    private javax.swing.JLabel compele_lbl;
    private javax.swing.JPanel correct_feedback;
    private javax.swing.JLabel correct_txt;
    private javax.swing.JPanel endgame_panel;
    private javax.swing.JLabel final_score_lbl;
    private javax.swing.JLabel gameover_label1;
    private javax.swing.JPanel gameover_panel;
    private javax.swing.JLabel goodjob;
    private javax.swing.JLabel hint_lbl;
    private javax.swing.JPanel hint_panel;
    private javax.swing.JPanel home;
    private javax.swing.JLabel lives_bg;
    private javax.swing.JLabel lives_lbl;
    private javax.swing.JLabel logo;
    private javax.swing.JButton menu_btn1;
    private javax.swing.JButton menu_btn3;
    private javax.swing.JToggleButton music_btn;
    private javax.swing.JButton next_btn;
    private javax.swing.JButton next_btn1;
    private javax.swing.JButton next_btn2;
    private javax.swing.JLabel nolives_lbl1;
    private javax.swing.JButton okay_btn;
    private javax.swing.JButton play_again_btn;
    private javax.swing.JButton play_again_btn1;
    private javax.swing.JLabel question;
    private javax.swing.JLabel question_bg;
    private javax.swing.JButton quit_btn;
    private javax.swing.JLabel quiz_lbl;
    private javax.swing.JButton resume_btn1;
    private javax.swing.JLabel score;
    private javax.swing.JLabel score_bg;
    private javax.swing.JLabel score_label;
    private javax.swing.JPanel settings;
    private javax.swing.JButton settings_btn;
    private javax.swing.JLabel sorry;
    private javax.swing.JLabel sorry_txt;
    private javax.swing.JLabel sorry_txt1;
    private javax.swing.JLabel timeisUp_lbl;
    private javax.swing.JLabel timer_bg;
    private javax.swing.JLabel timer_label;
    private javax.swing.JPanel times_up_feedback;
    private javax.swing.JButton tutorial_btn;
    private javax.swing.JLabel txt_bg;
    private javax.swing.JLabel txt_bg1;
    private javax.swing.JLabel txt_bg2;
    private javax.swing.JLabel txt_bg3;
    private javax.swing.JLabel txt_bg4;
    private javax.swing.JLabel txt_bg5;
    private javax.swing.JLabel txt_bg7;
    private javax.swing.JPanel wrong_feedback;
    private javax.swing.JLabel wrong_txt;
    // End of variables declaration//GEN-END:variables
}
